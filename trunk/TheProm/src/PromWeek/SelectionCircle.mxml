<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:prom="PromWeek.*" xmlns:util="com.util.*"
		 creationComplete="onCreationComplete()"
		 initialize="selectionCircleInitialize()"
		 styleName="classicPromWeek">
	
		 
	<fx:Metadata>
	</fx:Metadata>
		
	<fx:Declarations>
	</fx:Declarations>
	
	<s:Ellipse id="circle">
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:entries>
					<s:GradientEntry id="topGradient" color="#FFFFFF" alpha="0.7"/>
					<s:GradientEntry id="botGradient" color="#00FF00" alpha="0.7"/>
				</s:entries>
			</s:LinearGradient>
		</s:fill>
	</s:Ellipse>
	
	<fx:Script>
		<![CDATA[
		import mx.flash.UIMovieClip;
		import mx.graphics.GradientEntry;
		import mx.graphics.SolidColorStroke;
		import spark.primitives.*;
		import spark.components.Group;

		public var fillColor:GradientEntry;
		public var strokeColor:SolidColorStroke;
		public var locX:Number;
		public var locY:Number;
		private var gameEngine:PromWeek.GameEngine;
		//private var depth:Number;
		
		public function onCreationComplete():void
		{
			gameEngine = PromWeek.GameEngine.getInstance();
		}
		
		public function selectionCircleInitialize():void
		{
			this.fillColor = new GradientEntry(0xffff00, .9);
			
			this.strokeColor = new SolidColorStroke(0x000000, 1.0);
			this.strokeColor.weight = 5;
			
			//this.circle = new Ellipse();
			//this.addElement(this.circle);
			//default values
			
			this.circle.height = 50;
			this.circle.width = 150;
			//this.circle.depth = 2.0;
		}
		
		
		public function draw():void 
		{
			//draw the circle
			//changing these causes big trouble! It adds the dimensions instead of setting it.
			botGradient = this.fillColor;
			this.circle.stroke = this.strokeColor;
			this.circle.x = locX;
			this.circle.y = locY;
			//this.circle.depth = depth;
		}
		
		public function setLocation(x:Number, y:Number):void 
		{
			this.locX = x;
			this.locY = y;
		}
		
		/**
		 * Sets the style according to what boolean is true in game engine. This is called in gameEngine with all other components that change
		 * their style at the same time.
		 */
		public function setStyleName():void {
			this.setStyle("styleName", PromWeek.GameEngine.getInstance().activeStyleName);
			/*if(gameEngine.classicPromColors) {
				this.setStyle("styleName", "classicPromWeek");
			}
			else if(gameEngine.greenPromColors) {
				this.setStyle("styleName", "greenColor");
			}
			else if(gameEngine.redPromColors) {
				this.setStyle("styleName", "redColor");
			}*/
			this.invalidateProperties();
		}

		]]>
	</fx:Script>
		
	
</s:Group>