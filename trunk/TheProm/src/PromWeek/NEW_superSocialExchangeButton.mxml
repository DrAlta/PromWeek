<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 creationComplete="onCreationComplete()"
		 xmlns:prom="PromWeek.*" xmlns:util="com.util.*"
		 width="220" height="30">

		 
	 <fx:Metadata>
	 </fx:Metadata>
	 
	 <fx:Declarations>
	 </fx:Declarations>
		 
    <s:states>
    </s:states>
		 
	<s:HGroup width="100%" height="100%" gap="2" verticalAlign="middle" horizontalAlign="center">
		<prom:NEW_socialExchangeButton id="socialExchangeButton" width="165" height="27" />
		<s:Button id="infoButton" skinClass="PromWeek.skins.NEW_socialExchangeInfoButtonSkin" width="25" height="25" click="infoClickHandler(event)" />
		<!--<prom:NEW_socialExchangeResponseButton id="responseButton" skinClass="PromWeek.skins.NEW_socialExchangeResponseButtonSkin" width="25" height="25" click="responseClickHandler(event)" />-->
	</s:HGroup>
	
	<fx:Script>
		<![CDATA[
			import CiF.CiFSingleton;
			import CiF.GameScore;
			import CiF.LineOfDialogue;
			import flash.events.MouseEvent;
		
			
			private var gameEngine:GameEngine;
			private var jpm:JuicePointManager;
			
			public function onCreationComplete():void
			{
				gameEngine = PromWeek.GameEngine.getInstance();
				jpm = JuicePointManager.getInstance();
			}
			
			public function infoClickHandler(e:MouseEvent):void
			{				
				gameEngine.hudGroup.initiatorSelectedComponent.initiatorThoughtBubble.updateSocialExchangeInfoGroup(this.socialExchangeButton.sgName);
				gameEngine.hudGroup.responderPreResponseThoughtBubble.update(this.socialExchangeButton.sgName);
				gameEngine.hudGroup.responderSubjectiveThoughtBubble.thoughtBubbleImageStem.visible = false;
				gameEngine.hudGroup.responderPreResponseThoughtBubble.visible = true;
			}
			/*
			public function responseClickHandler(e:MouseEvent):void
			{	

				if (responseButton.locked)
				{
					var cost:Number = jpm.COST_FOR_UNLOCKING_RESPONDER_MOTIVE;
					//if (jpm.handleResponderMotiveUnlock("","","",null))
					if (jpm.handleResponderMotiveUnlock(gameEngine.primaryAvatarSelection.toLowerCase(),
							gameEngine.secondaryAvatarSelection.toLowerCase(), 
							this.socialExchangeButton.sgName.toLowerCase(),
							null))
					{
						responseButton.locked = false;
						responseButton.invalidateSkinState();
						GameEngine.getInstance().hudGroup.topBar.juiceBar.phantomJuiceHide();
					}
				}
				

				if (!this.responseButton.locked)
				{
					GameEngine.getInstance().hudGroup.updateSocialExchangeResponseThoughtBubble(this.socialExchangeButton.sgName);
				}
			}
			*/
			public function updateStateBasedOnGameScore(gameScore:GameScore,forceUnlock:Boolean=false):void 
			{
				this.socialExchangeButton.sgName = gameScore.name;
				
				this.socialExchangeButton.intentPred = CiFSingleton.getInstance().socialGamesLib.getByName(gameScore.name).intents[0].predicates[0];
				
				var initName:String = LineOfDialogue.toInitialCap(GameEngine.getInstance().hudGroup.initiatorSelectedComponent.currentInitiator);
				var respName:String = LineOfDialogue.toInitialCap(GameEngine.getInstance().hudGroup.initiatorSelectedComponent.currentResponder);
				
				/*
				if (jpm.isHintUnlocked(gameEngine.primaryAvatarSelection.toLowerCase(), gameEngine.secondaryAvatarSelection.toLowerCase(), gameScore.name.toLowerCase(), jpm.HINT_RESPONDER_MOTIVE))
				{
					this.responseButton.locked = false;
				}
				else
				{
					this.responseButton.locked = true;
				}
				this.responseButton.invalidateSkinState();
				*/
				
				//this.infoButton.toolTip = "Find out more about " + initName + "'s and " + respName + "'s thoughts about the social exchange \"" + gameScore.name + "\"";
				this.infoButton.toolTip = "Click for more info";
				//this.responseButton.toolTip = "Click to see what " + respName + " thinks about the social exchange \"" + gameScore.name + "\" with " + initName;
				
				this.socialExchangeButton.gameScore = gameScore;
				
				
				var previouslyUnlockedWithJuice:Boolean = jpm.isNonTopGameUnlocked(initName,respName,gameScore.name);

				
				if ((gameScore.score < JuicePointManager.getInstance().INTENT_SCORE_LOCK_THRESHOLD) && !forceUnlock && !previouslyUnlockedWithJuice)
				{
					this.socialExchangeButton.locked = true;
					this.infoButton.enabled = false;
				}
				else
				{
					this.socialExchangeButton.locked = false;
					this.infoButton.enabled = true;
				}
				
				
				//NOTE! This is a one time only deal to make QP7 work!				
				if (gameEngine.currentLevel.title == "LEVEL 7" && !previouslyUnlockedWithJuice)
				{
					this.socialExchangeButton.locked = true;
					this.infoButton.enabled = false;						
				}
				
				
				this.socialExchangeButton.invalidateSkinState();
				this.socialExchangeButton.skin.invalidateDisplayList();
				this.infoButton.invalidateSkinState();
			}

		]]>

	</fx:Script>
	
</s:Group>